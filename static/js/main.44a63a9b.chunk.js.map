{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["ExampleComponent","text","className","styles","shortcutMappingObj","showCommandPalette","App","setTestShortcut","shortcut","useState","element","setElement","useEffect","install","uninstall","useHotkey","ref","onClick","console","log","ReactDOM","render","document","getElementById"],"mappings":"yQAIaA,EAAmB,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACjC,OAAO,yBAAKC,UAAWC,GAAhB,sBAAP,IA2BF,IAAaC,EAAqB,CAChCC,mBAAoB,a,MC1BP,SAASC,IAEtB,IAAMC,EDCD,SAAmBC,QAAiB,IAAjBA,MAAW,MACnC,MAA8BC,mBAA9B,MAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAdAC,qBAAU,WAQR,OAPA,EACEF,GAAWG,YAAQH,EAAnBA,GAEAA,GAAWG,YAAQH,EAASN,EAA5BM,oBAIK,WACLI,kBAID,CAbHF,IAcA,ECnBwBG,CAAU,OAMlC,OACE,6BACE,kBAAC,EAAD,CAAkBd,KAAK,8CACvB,4BAAQe,IAAKT,EAAiBU,QAPlC,WACEC,QAAQC,IAAI,aAMV,cCZNC,IAASC,OAAO,kBAACf,EAAD,MAASgB,SAASC,eAAe,W","file":"static/js/main.44a63a9b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { install, uninstall } from \"@github/hotkey\"\nimport styles from './styles.module.css'\n\nexport const ExampleComponent = ({ text }) => {\n  return <div className={styles.test}>Example Component: {text}</div>\n}\n\n// 여기서 shortcut 을 인자로 받게 하자 ... 아니면 object 쓰던가 ... \n// 두번째 인자나 첫번째 인자로 무엇을 위한 단축키 인지 받게 할까 ?? \nexport function useHotkey(shortcut = null) {\n  const [element, setElement] = useState(null);\n\n\n  useEffect(() => {\n    if (shortcut) {\n      element && install(element, shortcut)\n    } else {\n      element && install(element, shortcutMappingObj.showCommandPalette)\n      // element && install(element, shortcutMappingObj[shortcut])\n    }\n\n    return () => {\n      uninstall(element)\n      // element && uninstall(element)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [element])\n  return setElement\n}\n\n\nexport const shortcutMappingObj = {\n  showCommandPalette: \"Control+P\",\n};\n\n\n// export function fireDeterminedAction(el: HTMLElement): void {\n//     if (isFormField(el)) {\n//         el.focus()\n//     } else {\n//         el.click()\n//     }\n// }\n\n\n\n// export function isFormField(element: Node): boolean {\n//     if (!(element instanceof HTMLElement)) {\n//         return false\n//     }\n\n//     const name = element.nodeName.toLowerCase()\n//     const type = (element.getAttribute('type') || '').toLowerCase()\n//     return (\n//         name === 'select' ||\n//         name === 'textarea' ||\n//         (name === 'input' && type !== 'submit' && type !== 'reset' && type !== 'checkbox' && type !== 'radio') ||\n//         element.isContentEditable\n//     )\n// }","import React from 'react'\n\nimport { ExampleComponent, useHotkey } from 'usehotkey'\nimport 'usehotkey/dist/index.css'\n\n\n\nexport default function App() {\n\n  const setTestShortcut = useHotkey(\"t e\")\n\n  function handleClick() {\n    console.log(\"clicked\");\n  }\n\n  return (\n    <div>\n      <ExampleComponent text=\"Create React Library Example 😄\" />\n      <button ref={setTestShortcut} onClick={handleClick} >press t e</button>\n    </div>\n  )\n}\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}